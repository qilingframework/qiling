language: shell
matrix:
  fast_finish: true
  include:
    - name: "Python 3.5 on Linux"
      os: linux
      dist: bionic
      language: python
      python: "3.5"
      install:
        - pip3 install -r requirements.txt
        - python3 setup.py install
      before_script:
        - pysite=$(python3 -m sysconfig | sed -n '/purelib/ s/.*\= *//p' | xargs); cp ${pysite}${pysite}/keystone/libkeystone.so $pysite/keystone/
        - cd tests
      script:
        - python3 test_all.py
        
    - name: "Python 3.6 on Linux"
      os: linux
      dist: bionic
      language: python
      python: "3.6"
      install:
        - pip3 install -r requirements.txt
        - python3 setup.py install
      before_script:
        - pysite=$(python3 -m sysconfig | sed -n '/purelib/ s/.*\= *//p' | xargs); cp ${pysite}${pysite}/keystone/libkeystone.so $pysite/keystone/
        - cd tests
      script:
        - python3 test_all.py
        
    - name: "Python 3.7 on OSX"
      os: osx
      osx_image: xcode11.2
      language: shell
      before_install:
        - pip3 install --upgrade pip
      install:
        - travis_wait pip3 install 'capstone>=4.0.1' 'pefile>=2019.4.18' 'python-registry>=1.3.1' 'unicorn>=1.0.2rc1'
        - git clone https://github.com/keystone-engine/keystone
        - cd keystone
        - mkdir build
        - cd build
        - ../make-share.sh
        - make -j8
        - sudo make install
        - cd ../bindings/python
        - sudo make install
        - python3 setup.py install
        - cd $TRAVIS_HOME/build/qilingframework/qiling
        - python3 setup.py install
      before_script:
        cd tests
      script:
        - python3 test_all.py
        
    - name: "Python 3.6 on Windows"
      os: windows
      language: shell
      env:
        - PATH="/c/Python36:/c/Python36/Scripts:$PATH"
      before_install:
        - choco install python --version=3.6.8
        #- choco install kb2999226
        - python -m pip install --upgrade pip
      install:
        - pip install 'capstone>=4.0.1' 'pefile>=2019.4.18' 'python-registry>=1.3.1' 'unicorn>=1.0.2rc1'
        - git clone https://github.com/keystone-engine/keystone
        - cd keystone
        - mkdir build
        - cd build
        - cmd.exe /C '"C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64 & ..\nmake-dll.bat && nmake install'
        - cd ../bindings/python
        - python setup.py install
        - cd $TRAVIS_HOME/build/qilingframework/qiling
        - python setup.py install
        - cmd.exe /C 'copy "C:\Program Files (x86)\keystone\lib\keystone.dll" C:\Python36\Lib\site-packages\keystone'
      before_script:
        - mkdir -p examples/rootfs/x8664_windows/dlls
        - mkdir -p examples/rootfs/x86_windows/dlls
        - mkdir registry
        - cp /c/Users/Default/NTUSER.DAT registry/NTUSER.DAT
        - cmd.exe //c "reg save hklm\system registry/SYSTEM"
        - cmd.exe //c "reg save hklm\security registry/SECURITY"
        - cmd.exe //c "reg save hklm\software registry/SOFTWARE"
        - cmd.exe //c "reg save hklm\SAM registry/SAM"
        - cp -r registry examples/rootfs/x8664_windows/
        - cp -r registry examples/rootfs/x86_windows/
        - cat docs/DLLX86.txt | grep -E Filename | grep -v "msvcr110.dll" | awk {'print $2'} > list32.txt
        - grep -E Filename docs/DLLX8664.txt | awk {'print $2'} > list64.txt
        - cd /c/Windows/SysWOW64/ && xargs -a $TRAVIS_HOME/build/qilingframework/qiling/list32.txt cp -t $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x86_windows/dlls
        - cp msvcr120_clr0400.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x86_windows/dlls/msvcr110.dll
        - cp downlevel/api-ms-win-crt-stdio-l1-1-0.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x86_windows/dlls/
        - cp downlevel/api-ms-win-crt-runtime-l1-1-0.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x86_windows/dlls/
        - cp downlevel/api-ms-win-crt-math-l1-1-0.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x86_windows/dlls/
        - cp downlevel/api-ms-win-crt-locale-l1-1-0.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x86_windows/dlls/
        - cp downlevel/api-ms-win-crt-heap-l1-1-0.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x86_windows/dlls/
        - cd /c/Windows/System32/ && xargs -a $TRAVIS_HOME/build/qilingframework/qiling/list64.txt cp -t $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x8664_windows/dlls
        - cp downlevel/api-ms-win-crt-stdio-l1-1-0.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x8664_windows/dlls/
        - cp downlevel/api-ms-win-crt-runtime-l1-1-0.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x8664_windows/dlls/
        - cp downlevel/api-ms-win-crt-math-l1-1-0.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x8664_windows/dlls/
        - cp downlevel/api-ms-win-crt-locale-l1-1-0.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x8664_windows/dlls/
        - cp downlevel/api-ms-win-crt-heap-l1-1-0.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x8664_windows/dlls/                
        - cp vcruntime140d.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x8664_windows/dlls/
        - cp ucrtbased.dll $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x8664_windows/dlls/
        - cd $TRAVIS_HOME/build/qilingframework/qiling/examples/rootfs/x86_windows/bin
        - unzip -Pinfected wannacry.bin.zip
        - cd $TRAVIS_HOME/build/qilingframework/qiling/tests
      script:
        - python test_pe_nu.py
      
#    - name: "Python 3.6 on WSL1 Ubuntu"
#      os: windows
#      language: shell
#      before_install:
#        - choco install wsl-ubuntu-1804
#        - wsl apt update
#        - wsl DEBIAN_FRONTEND=noninteractive apt dist-upgrade -y
#        - wsl DEBIAN_FRONTEND=noninteractive apt install -y python3-pip cmake
#        - wsl pip3 install --upgrade pip
#      install:
#        - wsl pip3 install -r requirements.txt
#        - wsl python3 setup.py install
#      before_script:
#        - MSYS_NO_PATHCONV=1 wsl cp $(wsl python3 -c "import site; print(site.getsitepackages()[0])")$(wsl python3 -c "import site; print(site.getsitepackages()[1])")/keystone/libkeystone.so $(wsl python3 -c "import site; print(site.getsitepackages()[0])")/keystone/
#        - cd tests
#      script:
#        - wsl python3 test_all.py
        
    - name: "Python 3.6 on Docker"
      services:
        - docker
      before_install:
        - docker build -t qiling:1.0 .
      script:
       - docker run qiling:1.0 /bin/sh -c "cd tests && python3 test_all.py"
       
  allow_failures:
    - os: osx  
